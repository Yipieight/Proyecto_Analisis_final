name: Build and Deploy to Azure Container Apps

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  AZURE_CONTAINER_REGISTRY: mastercookregistry
  RESOURCE_GROUP: MasterCookGroup
  CONTAINER_APP_ENVIRONMENT: mastercook-environment
  REGION: eastus

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    environment: workflows
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Log in to Azure Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build and push login_service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./login_backend_api_python/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/login_service:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/login_service:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push workshop_service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./workshop_backend_api_python/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/workshop_service:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/workshop_service:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push reservation_service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./reservation_backend_api_python/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/reservation_service:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/reservation_service:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push payment_service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./payment_backend_api_python/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/payment_service:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/payment_service:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Build and push booking_service
      uses: docker/build-push-action@v4
      with:
        context: .
        file: ./booking_backend_api_python/Dockerfile
        platforms: linux/amd64
        push: true
        tags: |
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/booking_service:latest
          ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/booking_service:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    environment: workflows
    
    steps:
    - name: Install Correct Azure CLI Version
      run: |
        curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
        az extension remove --name containerapp -y
        az extension add --name containerapp --version 1.0.0 -y

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Deploy Container Apps
      run: |
        services=(
          "login-service:login_service:5001"
          "workshop-service:workshop_service:5002"
          "reservation-service:reservation_service:5003"
          "payment-service:payment_service:5004"
          "booking-service:booking_service:5008"
        )

        for service in "${services[@]}"; do
          IFS=':' read -r app_name image_name target_port <<< "$service"
          
          echo "ðŸš€ Deploying $app_name..."
          az containerapp update \
            --name $app_name \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.CONTAINER_APP_ENVIRONMENT }} \
            --image ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/$image_name:${{ github.sha }} \
            --ingress external \
            --target-port $target_port \
            --set-env-vars \
              DB_USER='avnadmin' \
              DB_PASSWORD='AVNS_Ndhucmx5Rv2r1Ni7ocS' \
              DB_HOST='mysql-3bbd1558-xboxgar56-040e.g.aivencloud.com' \
              DB_PORT='16152' \
              DB_NAME='defaultdb' \
              JWT_SECRET_KEY='mastercook-super-secret' \
              RESERVATION_SERVICE_URL='http://reservation-service.internal' \
              STRIPE_SECRET_KEY="${{ secrets.STRIPE_SECRET_KEY }}" \
              GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}"
        done

    - name: Verify Deployment
      run: |
        echo "=== Public URLs ==="
        az containerapp list \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --query "[].{Name:name, URL:properties.configuration.ingress.fqdn}" \
          -o table